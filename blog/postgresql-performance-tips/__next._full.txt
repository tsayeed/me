1:"$Sreact.fragment"
2:I[70119,["/_next/static/chunks/348184844c30d5f6.js"],"default"]
3:I[39756,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"default"]
4:I[37457,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"default"]
6:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"OutletBoundary"]
7:"$Sreact.suspense"
9:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"ViewportBoundary"]
b:I[97367,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"MetadataBoundary"]
d:I[68027,[],"default"]
:HL["/_next/static/chunks/5f168ac36d53d156.css","style"]
:HL["/_next/static/media/83afe278b6a6bb3c-s.p.3a6ba036.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
0:{"P":null,"b":"5547Ppw5wAEeJvGlRcoPH","c":["","blog","postgresql-performance-tips"],"q":"","i":false,"f":[[["",{"children":["blog",{"children":[["slug","postgresql-performance-tips","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],[["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/5f168ac36d53d156.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","script","script-0",{"src":"/_next/static/chunks/348184844c30d5f6.js","async":true,"nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"scroll-smooth","children":["$","body",null,{"className":"inter_5972bc34-module__OU16Qa__className antialiased bg-white","children":[["$","$L2",null,{}],["$","main",null,{"className":"min-h-screen pt-20","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","footer",null,{"className":"bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 text-white py-12","children":["$","div",null,{"className":"container mx-auto px-4 sm:px-6 max-w-6xl","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center gap-6","children":[["$","div",null,{"className":"text-center md:text-left","children":[["$","p",null,{"className":"text-gray-300 text-lg font-medium mb-2","children":"Tahsin Al Sayeed"}],["$","p",null,{"className":"text-gray-400 text-sm mb-1","children":"Fullstack Python Engineer"}],["$","p",null,{"className":"text-gray-400 text-sm","children":["¬© ",2025," All rights reserved."]}]]}],["$","div",null,{"className":"flex flex-col items-center gap-4 md:gap-6","children":[["$","div",null,{"className":"text-center text-sm text-gray-400 space-y-1","children":[["$","p",null,{"children":"üìç Dhaka, Bangladesh"}],["$","p",null,{"children":"üìß tahsinalsayeed@gmail.com"}]]}],["$","div",null,{"className":"flex space-x-6","children":[["$","a",null,{"href":"https://github.com","target":"_blank","rel":"noopener noreferrer","className":"text-gray-300 hover:text-white transition-all font-medium hover:scale-110 transform duration-200","children":"GitHub"}],["$","a",null,{"href":"https://linkedin.com","target":"_blank","rel":"noopener noreferrer","className":"text-gray-300 hover:text-white transition-all font-medium hover:scale-110 transform duration-200","children":"LinkedIn"}]]}]]}]]}]}]}]]}]}]]}],{"children":[["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$","$7",null,{"name":"Next.MetadataOutlet","children":"$@8"}]}]]}],{},null,false,false]},null,false,false]},null,false,false]},null,false,false],["$","$1","h",{"children":[null,["$","$L9",null,{"children":"$@a"}],["$","div",null,{"hidden":true,"children":["$","$Lb",null,{"children":["$","$7",null,{"name":"Next.Metadata","children":"$@c"}]}]}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],false]],"m":"$undefined","G":["$d",[]],"s":false,"S":true}
e:I[22016,["/_next/static/chunks/348184844c30d5f6.js"],""]
f:Ta38,<h1>PostgreSQL Performance Tips for High-Traffic Applications</h1>
<p>After years of working with PostgreSQL in production environments, I've compiled some of the most impactful optimizations that can dramatically improve database performance.</p>
<h2>Index Strategy</h2>
<p>Indexes are your best friend for read-heavy workloads, but they come with trade-offs:</p>
<h3>B-Tree Indexes</h3>
<p>The default index type, great for most use cases:</p>
<pre><code class="language-sql">CREATE INDEX idx_users_email ON users(email);
</code></pre>
<h3>Partial Indexes</h3>
<p>Index only the rows you need:</p>
<pre><code class="language-sql">CREATE INDEX idx_active_users ON users(email) 
WHERE active = true;
</code></pre>
<h3>Covering Indexes</h3>
<p>Include additional columns to avoid table lookups:</p>
<pre><code class="language-sql">CREATE INDEX idx_users_email_name ON users(email) 
INCLUDE (first_name, last_name);
</code></pre>
<h2>Query Optimization</h2>
<h3>Use EXPLAIN ANALYZE</h3>
<p>Always analyze your queries before optimizing:</p>
<pre><code class="language-sql">EXPLAIN ANALYZE
SELECT * FROM orders 
WHERE user_id = 123 AND status = 'pending';
</code></pre>
<h3>Avoid SELECT *</h3>
<p>Only fetch the columns you need:</p>
<pre><code class="language-sql">-- Bad
SELECT * FROM users WHERE id = 1;

-- Good
SELECT id, email, first_name FROM users WHERE id = 1;
</code></pre>
<h2>Connection Pooling</h2>
<p>Use a connection pooler like PgBouncer to manage database connections efficiently:</p>
<ul>
<li>Reduces connection overhead</li>
<li>Allows more clients than max_connections</li>
<li>Different pooling modes for different use cases</li>
</ul>
<h2>Vacuuming and Maintenance</h2>
<p>Regular maintenance is crucial:</p>
<pre><code class="language-sql">-- Analyze tables for query planner
ANALYZE users;

-- Reclaim space and update statistics
VACUUM ANALYZE;
</code></pre>
<h2>Configuration Tuning</h2>
<p>Key PostgreSQL settings to tune based on your hardware:</p>
<ul>
<li><code>shared_buffers</code>: 25% of system RAM</li>
<li><code>effective_cache_size</code>: 50-75% of system RAM</li>
<li><code>work_mem</code>: Depends on query complexity</li>
<li><code>max_connections</code>: Keep it reasonable (100-300)</li>
</ul>
<h2>Monitoring</h2>
<p>Use tools like:</p>
<ul>
<li>pg_stat_statements for query statistics</li>
<li>pg_stat_activity for current connections</li>
<li>pgBadger for log analysis</li>
</ul>
<h2>Conclusion</h2>
<p>PostgreSQL performance tuning is both an art and a science. Start with these fundamentals, monitor your metrics, and iterate based on your specific workload patterns.</p>
5:["$","div",null,{"className":"container mx-auto px-6 py-12","children":["$","article",null,{"className":"max-w-3xl mx-auto","children":[["$","$Le",null,{"href":"/blog","className":"text-blue-600 hover:text-blue-700 mb-8 inline-block","children":"‚Üê Back to blog"}],["$","header",null,{"className":"mb-8","children":[["$","time",null,{"className":"text-gray-500 text-sm","children":"2024-10-15"}],["$","h1",null,{"className":"text-4xl md:text-5xl font-bold text-gray-900 mt-2 mb-4","children":"PostgreSQL Performance Tips for High-Traffic Applications"}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","span","PostgreSQL",{"className":"text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full","children":"PostgreSQL"}],["$","span","Database",{"className":"text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full","children":"Database"}],["$","span","Performance",{"className":"text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full","children":"Performance"}],["$","span","Backend",{"className":"text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full","children":"Backend"}]]}]]}],["$","div",null,{"className":"prose prose-lg max-w-none prose-headings:text-gray-900  prose-p:text-gray-700  prose-a:text-blue-600  prose-strong:text-gray-900 prose-code:text-pink-600 prose-code:bg-gray-100 prose-code:px-1 prose-code:py-0.5 prose-code:rounded prose-pre:bg-gray-900 prose-pre:text-gray-100 prose-img:rounded-lg prose-img:shadow-lg","dangerouslySetInnerHTML":{"__html":"$f"}}]]}]}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
10:I[27201,["/_next/static/chunks/ff1a16fafef87110.js","/_next/static/chunks/247eb132b7f7b574.js"],"IconMark"]
c:[["$","title","0",{"children":"Tahsin Al Sayeed - Software Engineer"}],["$","meta","1",{"name":"description","content":"Personal portfolio and blog of Tahsin Al Sayeed, a Software Engineer with 6+ years of experience in Python, FastAPI, Django, PostgreSQL, Docker, and AWS"}],["$","link","2",{"rel":"icon","href":"/favicon.ico?favicon.0b3bf435.ico","sizes":"256x256","type":"image/x-icon"}],["$","$L10","3",{}]]
8:null
